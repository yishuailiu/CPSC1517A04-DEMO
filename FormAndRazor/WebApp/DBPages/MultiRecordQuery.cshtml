@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "MultiRecord Query";

    var categorylist = Request.Form["categorylist"];
    if (categorylist == null)
    {//the first time the content page is activated
     //  the categorylist will be null because there was
     //  no CategoryList in existence yet
     //set the value to a known value of the appropriate
     //  datatype
     //Zero was chosen because primary keys are never zero.
        categorylist = "0";
    }
    var db = Database.Open("NWDB");
    //get the data for the dropdownlist
    //this needs to be done prior using the collection
    //   in the loop under the <Select> tag
    var ddlcommand = "SELECT CategoryID, CategoryName "
                    + "FROM Categories "
                    + "ORDER BY CategoryName";

    //command will return 0/1/mroe records.
    //therefore use .Query()
    var ddlResults = db.Query(ddlcommand);

    @section head{

        <link href="~/Content/MyCustomStyles.css" rel="stylesheet" />
    }

}
@section banner{
    <h1>DataBase: MultiRecord Query</h1>
}

@if (IsPost)
{
    //user did not select a region, ddl still sitting on the prompt line
    if (categorylist.Equals("0"))
    {
        <p><span style="color:firebrick">Make a select of a category.</span></p>
    }
    else
    {
        //demonstration
        //accessing the database for the product list can be delayed until
        //   the user has pressed the submit button

        //query the database using the choice from the dropdown list

        //code here
        // the database is already attached , see above
        //create command
        var querycommand = "SELECT ProductID "
                         + "FROM Products "
                         + "WHERE CategoryID = @0 ";

        //execute using .Query
        var results = db.Query(querycommand, categorylist);
        //check the results of the query
        if (results.Count() == 0)
        {
            <p><span style="color:red">No products fount for your select category, select a different category. </span></p>
        }
        //empty results code here

        //found results code here

        //pass a value from the returned record to the indicated page
        //? indicates argument(s) are to follow
        //an argument is made up of a label=value
        //multiple arguments are separated by a &
        //this uses the Get posting so the value will appear
        //   on the url
        Response.Redirect("MultiRecordWebGrid.cshtml?cid=" + categorylist);

    }
}

<form id="theform" method="post">
    <div class="row">
        <div class="col-md-offset-5">
            <label for="categoryarg">Select a category:</label><br />
            @*loop through the collection of records in ddlResults
                create a line in the ddl for each item in ddlResults
                referencing of the data items on each row
                 a) done using the [index] technique
                 b) one could have used properties .CategoryID and
                         .CategoryName*@
            <select id="categorylist" name="categorylist">
                <option value="0">select ...</option>
                <!--  loop code here-->
                @foreach (var catitem in ddlResults)
                {
                    <option value="@catitem.CategoryID">
                        @catitem[1]
                    </option>
                }
            </select>
            &nbsp;&nbsp;
            <button type="submit" id="formbutton" name="formbutton"
                    value="search" class="btn btn-primary">
                Search
            </button>
        </div>
    </div>
</form>
@section footer{
    &copy; CPSC1517 Nait 2019, all rights reserved
}

